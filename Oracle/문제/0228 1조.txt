1.--20번 부서의 최대급여
--80번 부서의 최소급여
select
(select avg(salary)
from employees 
where department_id = 20)max20,
(select sum(salary)
from employees 
where department_id = 80)min80
from dual;

2.--'Toronto'에 근무하는 사원의 사번 이름 부서번호 직업번호
select employee_id, first_name, department_id, job_id
from employees
where department_id in (select department_id
                        from departments
                        where location_id = (select location_id
                                             from locations
                                             where upper(city) = upper('toronto'))
                     );

3.--모든 사원의 사번 이름 급여 급여등급 부서이름
--단 A는 1등급,B는 2등급 ---- F는 6등급   (decode 를 이용해라)
select e.employee_id, e.first_name, e.salary
           , decode ((select grade_level from job_grades where e.salary between lowest_sal and highest_sal), 'A',1
                                                                                                                                                               ,'B',2
                                                                                                                                                               ,'C',3
                                                                                                                                                               ,'D',4
                                                                                                                                                               ,'E',5
                                                                                                                                                               ,'F',6) "등급"                            
from employees e, departments d
where e.department_id = d.department_id;



4.--20번 부서의 최고급여 별칭 부서 20 최고급여
--50번 부서의 최저급여 별칭 부서 50 최저급여
--60번 부서의 평균급여 별칭 부서 60 평균급여
--80번 부서의 급여총합 별칭 부서 80 급여총합
--90번 부서의 인원수   별칭 부서 90 인원수
select (select max(salary) from employees where department_id=20)"최고급여"
            ,(select min(salary) from employees where department_id=50)"최저급여"
            ,(select avg(salary) from employees where department_id = 60)"평균급여"
            ,(select sum(salary) from employees where department_id = 80)"급여총합"
            ,(select count(employee_id) from employees where department_id =90)"인원수"
from dual;


5. 'sales'에서 일하는 사원의 사번, 이름, 급여을 서브쿼리를 이용하여 나타내시오
-- 급여에 원을 붙이시요 (ex. 15000원)

select employee_id, first_name, department_id, concat(salary, '원')
from employees
where department_id = (select department_id
                        from departments
                         where lower(department_name) = lower('sales'));


6. 'Toronto'에 있는 부서의 사원 모두
-- 사원번호, 사원이름, 부서이름
-- 서브쿼리 사용

select e.employee_id, e.first_name, d.department_name
from employees e, departments d 
where e.department_id = d.department_id
    and d.location_id = (select location_id
                         from locations
                         where city = 'Toronto');


7. postal_code가 26192인 부서의 번호와 이름을 나타내라

select department_id, department_name
from departments
where location_id=(select location_id
                    from locations
                    where postal_code='26192');

8. postal_code가 26192인 곳에서 근무하는 직원들의 사번, 이름, 핸드폰번호를 출력해라.

select employee_id, first_name, phone_number
from employees
where department_id=(select department_id
                    from departments
                    where location_id=(select location_id
                                        from locations
                                        where postal_code='26192'));



9.--20번 부서의 최대 급여 보다 최대 급여가 큰 직급들을 출력하시오
--답)
select *
from jobs j where j.max_salary >(select max(e.salary) 
                                                from employees e
                                                where e.department_id = 20);

10. -- 문제 2 부서이름이 'Sales'이거나, 대륙 'Europe' 인 사원의 사원번호와 사원의 이름을 검색하라 (질문)
-- 답)
select *
from employees e , departments d,  regions r , countries c , locations l
where 
e.department_id = d.department_id(+)
and d.location_id= l.location_id 
and l.country_id = c.country_id
and c.region_id= r.region_id 
and (d.department_name like 'Sales' or r.region_name like 'Europe');