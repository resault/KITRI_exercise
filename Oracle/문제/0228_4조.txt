** 답은 밑에 있습니다.

1. 110번 부서에 있는 사원들보다 급여를 적게 받는 사원의 사번, 이름, 급여



2. 근무지역이 영국인 사원들의 평균 급여보다 크고,
-- 누군가의 상급자인 사원으로서 부서 번호가 (10, 20, 90)이 아닌 사원의
-- 사번, 이름, 급여, 부서번호



3. 각 부서에서 최고급여를 받는 사람의 사번, 이름, 봉급



4. 다음 사람들의 정보를 출력해라
-- 사원table에 manage_id 로 등록된 사원들의 사번 이름 급여 를 출력
-- 사번, 이름, 부서명



5. 직책이 바뀐 적이 있던 사원(job_history)의 사번, 이름, 급여, 그 사원이 속한 부서에서 최고급여




6. 80번 부서에 있는 사원들 보다 급여를 많이 받는 사원의 사번 ,이름 ,급여




7. 지역번호가 1700인 부서에서 일하는 사원의
--사번, 이름, 부서번호, 부서이름



8. 20번 부서의 평균급여
-- 부서이름 총 수
-- 매니저인 사원 총 인원수



9.부서번호가 20번의 평균 급여보다 크고,
-- 부서장 사원으로 부서번호가 80,90 아닌 사원의
-- 사번, 이름, 급여, 부서번호














-------------------------------------------------------------------------------------------------------------------------------

1. 

SELECT
    employee_id,
    first_name || ' ' || last_name "NAME",
    salary
FROM
    employees
WHERE
    salary < all (SELECT
                        salary
                    FROM
                        employees
                    WHERE
                        department_id = 110);


2. 

SELECT
    employee_id,
    first_name || ' ' || last_name "NAME",
    salary
FROM
    employees "E",  (SELECT DISTINCT
                                    manager_id
                               FROM
                                    employees
                               WHERE
                                    manager_id is not null) "M"
WHERE
    (M.manager_id = E.employee_id) and (E.department_id not in (10, 20, 90)) and (E.salary > (SELECT
                                                                                                                                     avg(salary)
                                                                                                                                FROM
                                                                                                                                     employees
                                                                                                                                WHERE
                                                                                                                                     department_id = (SELECT
                                                                                                                                                                      department_id
                                                                                                                                                                  FROM
                                                                                                                                                                      departments
                                                                                                                                                                  WHERE
                                                                                                                                                                       location_id = (SELECT
                                                                                                                                                                                                   location_id
                                                                                                                                                                                              FROM
                                                                                                                                                                                                   locations
                                                                                                                                                                                              WHERE
                                                                                                                                                                                                   country_id = 'UK'))));



3.
select
    *
from
    employees emp
where
    emp.salary = (
                        select
                            max(salary)
                        from
                            employees deptEmp
                        where
                            nvl(emp.department_id, 0) = nvl(deptEmp.department_id, 0)
                        )
;

4.
select
    *
from
    employees emp
    , (
        select distinct
            manager_id
        from
            employees
    ) mgrId
where
    emp.employee_id = mgrid.manager_id
;


5.
select
    emp.employee_id as 사번
    , emp.first_name as 이름
    , emp.salary as 급여
    , (
        select
            max(salary)
        from
            employees depEmp
        where
            emp.department_id = depEmp.department_id
    ) as 부서내최고급여
from
    employees emp
where
    emp.employee_id in (
                                    select
                                        jh.employee_id
                                    from
                                        job_history jh
                                )
;


6.
select max(salary)
from employees
where department_id = 80;


select e.employee_id , e.first_name , e.salary
from employees e
where e.salary > all (select(salary)
                            from employees
                            where department_id = 80);


7.
select department_id, department_name
from departments
where location_id = 1800;


select e.employee_id , e.first_name , e.department_id , d.department_name
from  employees e , (select department_id, department_name
                            from departments
                            where location_id = 1800) d
where e.department_id = d.department_id;


8.
select
(select avg(salary) from employees where department_id = 20) 평균급여,
(select count(department_name) from departments) 부서수,
(select count(DISTINCT(m.first_name)) from employees e, employees m where e.manager_id = m.employee_id) 매니저수
from dual; -- select안에 서브퀄은 로우가 한컬럼당 여러개 안됨. 단일행 단일컬럼만 가능.


9.
select e20.first_name
from (
    select employee_id , first_name
    from employees
    where salary >(select avg(salary)
                    from employees
                    where department_id = 20
                    )
    ) e20, departments d
where e20.employee_id = d.manager_id
and d.department_id not in (90,80);